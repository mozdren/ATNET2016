//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceBusTests.OrderService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceBusTests.OrderService.Basket))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceBusTests.OrderService.Campaign))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceBusTests.OrderService.BasketItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceBusTests.OrderService.Product))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceBusTests.OrderService.BillingInformation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceBusTests.OrderService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceBusTests.OrderService.PluralizedOfOrdergUMYyf5D))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceBusTests.OrderService.Orders))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceBusTests.OrderService.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceBusTests.OrderService.Order))]
    public partial class DTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.Result ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.Result Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.ResultType ResultTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.ResultType ResultType {
            get {
                return this.ResultTypeField;
            }
            set {
                if ((this.ResultTypeField.Equals(value) != true)) {
                    this.ResultTypeField = value;
                    this.RaisePropertyChanged("ResultType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Basket", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Basket : ServiceBusTests.OrderService.DTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.Campaign[] BasketCampaingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.BasketItem[] BasketItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.Campaign[] BasketCampaings {
            get {
                return this.BasketCampaingsField;
            }
            set {
                if ((object.ReferenceEquals(this.BasketCampaingsField, value) != true)) {
                    this.BasketCampaingsField = value;
                    this.RaisePropertyChanged("BasketCampaings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.BasketItem[] BasketItems {
            get {
                return this.BasketItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.BasketItemsField, value) != true)) {
                    this.BasketItemsField = value;
                    this.RaisePropertyChanged("BasketItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Campaign", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Campaign : ServiceBusTests.OrderService.DTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasketItem", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    public partial class BasketItem : ServiceBusTests.OrderService.DTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Product : ServiceBusTests.OrderService.DTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillingInformation", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    public partial class BillingInformation : ServiceBusTests.OrderService.DTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.Address BillingAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IBANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BIC {
            get {
                return this.BICField;
            }
            set {
                if ((object.ReferenceEquals(this.BICField, value) != true)) {
                    this.BICField = value;
                    this.RaisePropertyChanged("BIC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.Address BillingAddress {
            get {
                return this.BillingAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingAddressField, value) != true)) {
                    this.BillingAddressField = value;
                    this.RaisePropertyChanged("BillingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IBAN {
            get {
                return this.IBANField;
            }
            set {
                if ((object.ReferenceEquals(this.IBANField, value) != true)) {
                    this.IBANField = value;
                    this.RaisePropertyChanged("IBAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Address : ServiceBusTests.OrderService.DTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HouseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseNumberExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string District {
            get {
                return this.DistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictField, value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoorNumber {
            get {
                return this.DoorNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DoorNumberField, value) != true)) {
                    this.DoorNumberField = value;
                    this.RaisePropertyChanged("DoorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HouseNumber {
            get {
                return this.HouseNumberField;
            }
            set {
                if ((this.HouseNumberField.Equals(value) != true)) {
                    this.HouseNumberField = value;
                    this.RaisePropertyChanged("HouseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseNumberExtension {
            get {
                return this.HouseNumberExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNumberExtensionField, value) != true)) {
                    this.HouseNumberExtensionField = value;
                    this.RaisePropertyChanged("HouseNumberExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PluralizedOfOrdergUMYyf5D", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceBusTests.OrderService.Orders))]
    public partial class PluralizedOfOrdergUMYyf5D : ServiceBusTests.OrderService.DTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.Order[] ItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.Order[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Orders", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Orders : ServiceBusTests.OrderService.PluralizedOfOrdergUMYyf5D {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    public partial class User : ServiceBusTests.OrderService.DTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentificationCompanyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxIdentificationCompanyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.Address UserAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdentificationCompanyNumber {
            get {
                return this.IdentificationCompanyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentificationCompanyNumberField, value) != true)) {
                    this.IdentificationCompanyNumberField = value;
                    this.RaisePropertyChanged("IdentificationCompanyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxIdentificationCompanyNumber {
            get {
                return this.TaxIdentificationCompanyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxIdentificationCompanyNumberField, value) != true)) {
                    this.TaxIdentificationCompanyNumberField = value;
                    this.RaisePropertyChanged("TaxIdentificationCompanyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.Address UserAddress {
            get {
                return this.UserAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAddressField, value) != true)) {
                    this.UserAddressField = value;
                    this.RaisePropertyChanged("UserAddress");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Order : ServiceBusTests.OrderService.DTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.Basket BasketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.BillingInformation BillingInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.Address DeliveryAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceBusTests.OrderService.OrderStateType OrderStateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.Basket Basket {
            get {
                return this.BasketField;
            }
            set {
                if ((object.ReferenceEquals(this.BasketField, value) != true)) {
                    this.BasketField = value;
                    this.RaisePropertyChanged("Basket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.BillingInformation BillingInformation {
            get {
                return this.BillingInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingInformationField, value) != true)) {
                    this.BillingInformationField = value;
                    this.RaisePropertyChanged("BillingInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.Address DeliveryAddress {
            get {
                return this.DeliveryAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryAddressField, value) != true)) {
                    this.DeliveryAddressField = value;
                    this.RaisePropertyChanged("DeliveryAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceBusTests.OrderService.OrderStateType OrderState {
            get {
                return this.OrderStateField;
            }
            set {
                if ((this.OrderStateField.Equals(value) != true)) {
                    this.OrderStateField = value;
                    this.RaisePropertyChanged("OrderState");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderStateType", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.Enums")]
    public enum OrderStateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Created = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Changed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToSend = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sent = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paid = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Finished = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultType", Namespace="http://schemas.datacontract.org/2004/07/SharedLibs.Enums")]
    public enum ResultType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fatal = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderService.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        ServiceBusTests.OrderService.Order GetOrder(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        System.Threading.Tasks.Task<ServiceBusTests.OrderService.Order> GetOrderAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrders", ReplyAction="http://tempuri.org/IOrderService/GetAllOrdersResponse")]
        ServiceBusTests.OrderService.Orders GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetAllOrders", ReplyAction="http://tempuri.org/IOrderService/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<ServiceBusTests.OrderService.Orders> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        ServiceBusTests.OrderService.Result AddOrder(System.Guid guid, ServiceBusTests.OrderService.Basket basket, ServiceBusTests.OrderService.Address deliveryAddress, ServiceBusTests.OrderService.BillingInformation billingInformation, System.DateTime orderDate, System.DateTime deliveryDate, ServiceBusTests.OrderService.OrderStateType orderState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> AddOrderAsync(System.Guid guid, ServiceBusTests.OrderService.Basket basket, ServiceBusTests.OrderService.Address deliveryAddress, ServiceBusTests.OrderService.BillingInformation billingInformation, System.DateTime orderDate, System.DateTime deliveryDate, ServiceBusTests.OrderService.OrderStateType orderState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrderByObject", ReplyAction="http://tempuri.org/IOrderService/AddOrderByObjectResponse")]
        ServiceBusTests.OrderService.Result AddOrderByObject(ServiceBusTests.OrderService.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrderByObject", ReplyAction="http://tempuri.org/IOrderService/AddOrderByObjectResponse")]
        System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> AddOrderByObjectAsync(ServiceBusTests.OrderService.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/EditOrder", ReplyAction="http://tempuri.org/IOrderService/EditOrderResponse")]
        ServiceBusTests.OrderService.Order EditOrder(System.Guid guid, ServiceBusTests.OrderService.Basket basket, ServiceBusTests.OrderService.Address deliveryAddress, ServiceBusTests.OrderService.BillingInformation billingInformation, System.DateTime deliveryDate, ServiceBusTests.OrderService.OrderStateType orderState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/EditOrder", ReplyAction="http://tempuri.org/IOrderService/EditOrderResponse")]
        System.Threading.Tasks.Task<ServiceBusTests.OrderService.Order> EditOrderAsync(System.Guid guid, ServiceBusTests.OrderService.Basket basket, ServiceBusTests.OrderService.Address deliveryAddress, ServiceBusTests.OrderService.BillingInformation billingInformation, System.DateTime deliveryDate, ServiceBusTests.OrderService.OrderStateType orderState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ChangeOrderState", ReplyAction="http://tempuri.org/IOrderService/ChangeOrderStateResponse")]
        ServiceBusTests.OrderService.Result ChangeOrderState(System.Guid guid, ServiceBusTests.OrderService.OrderStateType orderState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ChangeOrderState", ReplyAction="http://tempuri.org/IOrderService/ChangeOrderStateResponse")]
        System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> ChangeOrderStateAsync(System.Guid guid, ServiceBusTests.OrderService.OrderStateType orderState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        ServiceBusTests.OrderService.Result DeleteOrder(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> DeleteOrderAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CreateEmail", ReplyAction="http://tempuri.org/IOrderService/CreateEmailResponse")]
        ServiceBusTests.OrderService.Result CreateEmail(ServiceBusTests.OrderService.User user, ServiceBusTests.OrderService.Order order, string emailText, string attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CreateEmail", ReplyAction="http://tempuri.org/IOrderService/CreateEmailResponse")]
        System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> CreateEmailAsync(ServiceBusTests.OrderService.User user, ServiceBusTests.OrderService.Order order, string emailText, string attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SendEmail", ReplyAction="http://tempuri.org/IOrderService/SendEmailResponse")]
        ServiceBusTests.OrderService.Result SendEmail(ServiceBusTests.OrderService.User user, ServiceBusTests.OrderService.Order order, string emailText, string attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SendEmail", ReplyAction="http://tempuri.org/IOrderService/SendEmailResponse")]
        System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> SendEmailAsync(ServiceBusTests.OrderService.User user, ServiceBusTests.OrderService.Order order, string emailText, string attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CreateInvoice", ReplyAction="http://tempuri.org/IOrderService/CreateInvoiceResponse")]
        ServiceBusTests.OrderService.CreateInvoiceResponse CreateInvoice(ServiceBusTests.OrderService.CreateInvoiceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CreateInvoice", ReplyAction="http://tempuri.org/IOrderService/CreateInvoiceResponse")]
        System.Threading.Tasks.Task<ServiceBusTests.OrderService.CreateInvoiceResponse> CreateInvoiceAsync(ServiceBusTests.OrderService.CreateInvoiceRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInvoice", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateInvoiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceBusTests.OrderService.User user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public ServiceBusTests.OrderService.Order order;
        
        public CreateInvoiceRequest() {
        }
        
        public CreateInvoiceRequest(ServiceBusTests.OrderService.User user, ServiceBusTests.OrderService.Order order) {
            this.user = user;
            this.order = order;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInvoiceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateInvoiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceBusTests.OrderService.Result CreateInvoiceResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pdfFilePath;
        
        public CreateInvoiceResponse() {
        }
        
        public CreateInvoiceResponse(ServiceBusTests.OrderService.Result CreateInvoiceResult, string pdfFilePath) {
            this.CreateInvoiceResult = CreateInvoiceResult;
            this.pdfFilePath = pdfFilePath;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : ServiceBusTests.OrderService.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<ServiceBusTests.OrderService.IOrderService>, ServiceBusTests.OrderService.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceBusTests.OrderService.Order GetOrder(System.Guid guid) {
            return base.Channel.GetOrder(guid);
        }
        
        public System.Threading.Tasks.Task<ServiceBusTests.OrderService.Order> GetOrderAsync(System.Guid guid) {
            return base.Channel.GetOrderAsync(guid);
        }
        
        public ServiceBusTests.OrderService.Orders GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<ServiceBusTests.OrderService.Orders> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public ServiceBusTests.OrderService.Result AddOrder(System.Guid guid, ServiceBusTests.OrderService.Basket basket, ServiceBusTests.OrderService.Address deliveryAddress, ServiceBusTests.OrderService.BillingInformation billingInformation, System.DateTime orderDate, System.DateTime deliveryDate, ServiceBusTests.OrderService.OrderStateType orderState) {
            return base.Channel.AddOrder(guid, basket, deliveryAddress, billingInformation, orderDate, deliveryDate, orderState);
        }
        
        public System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> AddOrderAsync(System.Guid guid, ServiceBusTests.OrderService.Basket basket, ServiceBusTests.OrderService.Address deliveryAddress, ServiceBusTests.OrderService.BillingInformation billingInformation, System.DateTime orderDate, System.DateTime deliveryDate, ServiceBusTests.OrderService.OrderStateType orderState) {
            return base.Channel.AddOrderAsync(guid, basket, deliveryAddress, billingInformation, orderDate, deliveryDate, orderState);
        }
        
        public ServiceBusTests.OrderService.Result AddOrderByObject(ServiceBusTests.OrderService.Order order) {
            return base.Channel.AddOrderByObject(order);
        }
        
        public System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> AddOrderByObjectAsync(ServiceBusTests.OrderService.Order order) {
            return base.Channel.AddOrderByObjectAsync(order);
        }
        
        public ServiceBusTests.OrderService.Order EditOrder(System.Guid guid, ServiceBusTests.OrderService.Basket basket, ServiceBusTests.OrderService.Address deliveryAddress, ServiceBusTests.OrderService.BillingInformation billingInformation, System.DateTime deliveryDate, ServiceBusTests.OrderService.OrderStateType orderState) {
            return base.Channel.EditOrder(guid, basket, deliveryAddress, billingInformation, deliveryDate, orderState);
        }
        
        public System.Threading.Tasks.Task<ServiceBusTests.OrderService.Order> EditOrderAsync(System.Guid guid, ServiceBusTests.OrderService.Basket basket, ServiceBusTests.OrderService.Address deliveryAddress, ServiceBusTests.OrderService.BillingInformation billingInformation, System.DateTime deliveryDate, ServiceBusTests.OrderService.OrderStateType orderState) {
            return base.Channel.EditOrderAsync(guid, basket, deliveryAddress, billingInformation, deliveryDate, orderState);
        }
        
        public ServiceBusTests.OrderService.Result ChangeOrderState(System.Guid guid, ServiceBusTests.OrderService.OrderStateType orderState) {
            return base.Channel.ChangeOrderState(guid, orderState);
        }
        
        public System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> ChangeOrderStateAsync(System.Guid guid, ServiceBusTests.OrderService.OrderStateType orderState) {
            return base.Channel.ChangeOrderStateAsync(guid, orderState);
        }
        
        public ServiceBusTests.OrderService.Result DeleteOrder(System.Guid guid) {
            return base.Channel.DeleteOrder(guid);
        }
        
        public System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> DeleteOrderAsync(System.Guid guid) {
            return base.Channel.DeleteOrderAsync(guid);
        }
        
        public ServiceBusTests.OrderService.Result CreateEmail(ServiceBusTests.OrderService.User user, ServiceBusTests.OrderService.Order order, string emailText, string attachment) {
            return base.Channel.CreateEmail(user, order, emailText, attachment);
        }
        
        public System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> CreateEmailAsync(ServiceBusTests.OrderService.User user, ServiceBusTests.OrderService.Order order, string emailText, string attachment) {
            return base.Channel.CreateEmailAsync(user, order, emailText, attachment);
        }
        
        public ServiceBusTests.OrderService.Result SendEmail(ServiceBusTests.OrderService.User user, ServiceBusTests.OrderService.Order order, string emailText, string attachment) {
            return base.Channel.SendEmail(user, order, emailText, attachment);
        }
        
        public System.Threading.Tasks.Task<ServiceBusTests.OrderService.Result> SendEmailAsync(ServiceBusTests.OrderService.User user, ServiceBusTests.OrderService.Order order, string emailText, string attachment) {
            return base.Channel.SendEmailAsync(user, order, emailText, attachment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceBusTests.OrderService.CreateInvoiceResponse ServiceBusTests.OrderService.IOrderService.CreateInvoice(ServiceBusTests.OrderService.CreateInvoiceRequest request) {
            return base.Channel.CreateInvoice(request);
        }
        
        public ServiceBusTests.OrderService.Result CreateInvoice(ServiceBusTests.OrderService.User user, ServiceBusTests.OrderService.Order order, out string pdfFilePath) {
            ServiceBusTests.OrderService.CreateInvoiceRequest inValue = new ServiceBusTests.OrderService.CreateInvoiceRequest();
            inValue.user = user;
            inValue.order = order;
            ServiceBusTests.OrderService.CreateInvoiceResponse retVal = ((ServiceBusTests.OrderService.IOrderService)(this)).CreateInvoice(inValue);
            pdfFilePath = retVal.pdfFilePath;
            return retVal.CreateInvoiceResult;
        }
        
        public System.Threading.Tasks.Task<ServiceBusTests.OrderService.CreateInvoiceResponse> CreateInvoiceAsync(ServiceBusTests.OrderService.CreateInvoiceRequest request) {
            return base.Channel.CreateInvoiceAsync(request);
        }
    }
}
