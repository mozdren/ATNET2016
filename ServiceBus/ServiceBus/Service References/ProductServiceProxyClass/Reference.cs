//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceBus.ProductServiceProxyClass {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceProxyClass.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProduct", ReplyAction="http://tempuri.org/IProductService/GetProductResponse")]
        SharedLibs.DataContracts.Product GetProduct(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProduct", ReplyAction="http://tempuri.org/IProductService/GetProductResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Product> GetProductAsync(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        SharedLibs.DataContracts.Products GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Products> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        SharedLibs.DataContracts.Result AddProduct(string name, double price, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> AddProductAsync(string name, double price, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProductByObject", ReplyAction="http://tempuri.org/IProductService/AddProductByObjectResponse")]
        SharedLibs.DataContracts.Result AddProductByObject(SharedLibs.DataContracts.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProductByObject", ReplyAction="http://tempuri.org/IProductService/AddProductByObjectResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> AddProductByObjectAsync(SharedLibs.DataContracts.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/EditProduct", ReplyAction="http://tempuri.org/IProductService/EditProductResponse")]
        SharedLibs.DataContracts.Product EditProduct(System.Guid guid, string name, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/EditProduct", ReplyAction="http://tempuri.org/IProductService/EditProductResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Product> EditProductAsync(System.Guid guid, string name, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        SharedLibs.DataContracts.Result DeleteProduct(System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> DeleteProductAsync(System.Guid guid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : ServiceBus.ProductServiceProxyClass.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<ServiceBus.ProductServiceProxyClass.IProductService>, ServiceBus.ProductServiceProxyClass.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SharedLibs.DataContracts.Product GetProduct(System.Guid guid) {
            return base.Channel.GetProduct(guid);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Product> GetProductAsync(System.Guid guid) {
            return base.Channel.GetProductAsync(guid);
        }
        
        public SharedLibs.DataContracts.Products GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Products> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public SharedLibs.DataContracts.Result AddProduct(string name, double price, System.Guid guid) {
            return base.Channel.AddProduct(name, price, guid);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> AddProductAsync(string name, double price, System.Guid guid) {
            return base.Channel.AddProductAsync(name, price, guid);
        }
        
        public SharedLibs.DataContracts.Result AddProductByObject(SharedLibs.DataContracts.Product product) {
            return base.Channel.AddProductByObject(product);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> AddProductByObjectAsync(SharedLibs.DataContracts.Product product) {
            return base.Channel.AddProductByObjectAsync(product);
        }
        
        public SharedLibs.DataContracts.Product EditProduct(System.Guid guid, string name, double price) {
            return base.Channel.EditProduct(guid, name, price);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Product> EditProductAsync(System.Guid guid, string name, double price) {
            return base.Channel.EditProductAsync(guid, name, price);
        }
        
        public SharedLibs.DataContracts.Result DeleteProduct(System.Guid guid) {
            return base.Channel.DeleteProduct(guid);
        }
        
        public System.Threading.Tasks.Task<SharedLibs.DataContracts.Result> DeleteProductAsync(System.Guid guid) {
            return base.Channel.DeleteProductAsync(guid);
        }
    }
}
